{"remainingRequest":"D:\\项目\\My_project\\vuepress-starter\\新建文件夹\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\项目\\My_project\\vuepress-starter\\新建文件夹\\vuepress-starter\\node_modules\\loglevel\\lib\\loglevel.js","dependencies":[{"path":"D:\\项目\\My_project\\vuepress-starter\\新建文件夹\\vuepress-starter\\node_modules\\loglevel\\lib\\loglevel.js","mtime":1591862527138},{"path":"D:\\项目\\My_project\\vuepress-starter\\新建文件夹\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591862511060},{"path":"D:\\项目\\My_project\\vuepress-starter\\新建文件夹\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js","mtime":1591862511204}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/项目/My_project/vuepress-starter/新建文件夹/vuepress-starter/node_modules/loglevel/lib/loglevel.js"],"names":["root","definition","define","amd","module","exports","log","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","trace","realMethod","undefined","replaceLoggingMethods","level","loggerName","i","length","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","name","defaultLevel","factory","self","currentLevel","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","indexOf","exec","slice","levels","getLevel","setLevel","persist","SILENT","setDefaultLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers"],"mappings":"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","sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n"]}]}