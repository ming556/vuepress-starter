{"remainingRequest":"D:\\项目\\My_project\\vuepress-starter\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\项目\\My_project\\vuepress-starter\\vuepress-starter\\node_modules\\path-browserify\\index.js","dependencies":[{"path":"D:\\项目\\My_project\\vuepress-starter\\vuepress-starter\\node_modules\\path-browserify\\index.js","mtime":1591862541061},{"path":"D:\\项目\\My_project\\vuepress-starter\\vuepress-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591862511060},{"path":"D:\\项目\\My_project\\vuepress-starter\\vuepress-starter\\node_modules\\babel-loader\\lib\\index.js","mtime":1591862511204}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}